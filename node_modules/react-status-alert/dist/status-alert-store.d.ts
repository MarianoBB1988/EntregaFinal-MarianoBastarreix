import { Alert } from './status-alert-item';
export type StoreState = Alert[];
export declare enum StoreActionTypes {
    AddAlert = "ADD_ALERT",
    RemoveAlert = "REMOVE_ALERT",
    RemoveAllAlerts = "REMOVE_ALL_ALERTS"
}
export interface StoreAddAlertAction {
    type: StoreActionTypes.AddAlert;
    payload: Alert;
}
export interface StoreRemoveAlertAction {
    type: StoreActionTypes.RemoveAlert;
    payload: string;
}
export interface StoreRemoveAllAlertsAction {
    type: StoreActionTypes.RemoveAllAlerts;
}
export type StoreAction = StoreAddAlertAction | StoreRemoveAlertAction | StoreRemoveAllAlertsAction;
export type Reducer = (state: StoreState, action: StoreAction) => StoreState;
export type Listener = () => void;
export type Unsubscriber = () => void;
declare const statusAlertStore: {
    getState: () => StoreState;
    dispatch: (action: StoreAction) => void;
    subscribe: (listener: Listener) => Unsubscriber;
};
export default statusAlertStore;
