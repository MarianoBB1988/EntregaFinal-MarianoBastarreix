"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusAlertService = exports.StatusAlertServiceClass = void 0;
var status_alert_item_1 = require("./status-alert-item");
var status_alert_store_1 = __importStar(require("./status-alert-store"));
var StatusAlertServiceClass = /** @class */ (function () {
    function StatusAlertServiceClass() {
    }
    StatusAlertServiceClass.prototype.showAlert = function (message, type, customOptions) {
        var options = __assign(__assign({}, status_alert_item_1.defaultAlertOptions), customOptions);
        if (options && options.removeAllBeforeShow) {
            this.removeAllAlerts();
        }
        var id = generateUUID();
        status_alert_store_1.default.dispatch({
            type: status_alert_store_1.StoreActionTypes.AddAlert,
            payload: {
                id: id,
                message: message,
                type: type,
                options: options || {},
            },
        });
        return id;
    };
    StatusAlertServiceClass.prototype.showSuccess = function (message, customOptions) {
        return this.showAlert(message, 'success', customOptions);
    };
    StatusAlertServiceClass.prototype.showError = function (message, customOptions) {
        return this.showAlert(message, 'error', customOptions);
    };
    StatusAlertServiceClass.prototype.showInfo = function (message, customOptions) {
        return this.showAlert(message, 'info', customOptions);
    };
    StatusAlertServiceClass.prototype.showWarning = function (message, customOptions) {
        return this.showAlert(message, 'warning', customOptions);
    };
    StatusAlertServiceClass.prototype.removeAlert = function (alertId) {
        status_alert_store_1.default.dispatch({
            type: status_alert_store_1.StoreActionTypes.RemoveAlert,
            payload: alertId,
        });
    };
    StatusAlertServiceClass.prototype.removeAllAlerts = function () {
        status_alert_store_1.default.dispatch({
            type: status_alert_store_1.StoreActionTypes.RemoveAllAlerts,
        });
    };
    return StatusAlertServiceClass;
}());
exports.StatusAlertServiceClass = StatusAlertServiceClass;
exports.StatusAlertService = new StatusAlertServiceClass();
function generateUUID() {
    // Public Domain/MIT
    var d = new Date().getTime();
    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
        d += performance.now();
    }
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        // tslint:disable-next-line no-bitwise
        var r = (d + Math.random() * 16) % 16 | 0;
        d = Math.floor(d / 16);
        // tslint:disable-next-line no-bitwise
        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);
    });
}
