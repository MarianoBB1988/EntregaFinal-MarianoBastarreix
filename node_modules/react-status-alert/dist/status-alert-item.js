"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusAlertItem = exports.defaultAlertOptions = void 0;
var react_1 = __importStar(require("react"));
var status_alert_item_helpers_1 = require("./status-alert-item-helpers");
var status_alert_service_1 = require("./status-alert-service");
exports.defaultAlertOptions = {
    autoHide: true,
    autoHideTime: 3500,
    withIcon: true,
    withCloseIcon: true,
    removeAllBeforeShow: true,
};
var StatusAlertItem = function (props) {
    var statusAlert = (0, react_1.useRef)(null);
    var showFrameId;
    var hideFrameId;
    var removeAlertCallbackSubmit = function () { return status_alert_service_1.StatusAlertService.removeAlert(props.alert.id); };
    var alertOptions = function () { return (__assign(__assign({}, exports.defaultAlertOptions), props.alert.options)); };
    var alertText = function () {
        if (typeof props.alert.message === 'object' && !react_1.default.isValidElement(props.alert.message)) {
            return JSON.stringify(props.alert.message);
        }
        return props.alert.message;
    };
    var showAlert = function () {
        showFrameId = requestAnimationFrame(function () {
            return setTimeout(function () {
                var _a;
                (_a = statusAlert.current) === null || _a === void 0 ? void 0 : _a.classList.remove('is-transparent');
            });
        });
    };
    var removeAlert = function () {
        hideFrameId = requestAnimationFrame(function () {
            var _a;
            (_a = statusAlert.current) === null || _a === void 0 ? void 0 : _a.classList.add('is-transparent');
            setTimeout(removeAlertCallbackSubmit, 800);
        });
    };
    react_1.default.useEffect(function () {
        var hideTimeout;
        showAlert();
        if (alertOptions().autoHide) {
            hideTimeout = setTimeout(removeAlert, alertOptions().autoHideTime);
        }
        return function () {
            showFrameId && window.cancelAnimationFrame(showFrameId);
            hideFrameId && window.cancelAnimationFrame(hideFrameId);
            hideTimeout && clearTimeout(hideTimeout);
        };
    }, []);
    return (react_1.default.createElement("div", { className: "status-alert is-transparent", ref: statusAlert },
        react_1.default.createElement("div", { className: "status-alert__padding-wrapper" },
            react_1.default.createElement("div", { className: "status-alert__box ".concat((0, status_alert_item_helpers_1.boxClassName)(props.alert.type)) },
                alertOptions().withCloseIcon && (react_1.default.createElement("div", { className: "status-alert__icon-on-right-holder" },
                    react_1.default.createElement("div", { className: "status-alert__icon is-close-icon", onClick: removeAlert }))),
                alertOptions().withIcon && (react_1.default.createElement("div", { className: "status-alert__icon-holder" },
                    react_1.default.createElement("div", { className: "status-alert__icon ".concat((0, status_alert_item_helpers_1.alertIcon)(props.alert.type)) }))),
                react_1.default.createElement("div", { className: "status-alert__text" }, alertText())))));
};
exports.StatusAlertItem = StatusAlertItem;
